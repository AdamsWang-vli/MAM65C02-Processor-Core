---------------------- 11/18/2012 10:01:06 PM ------------------------
 
-- Instructions --
0x0000  RTS   RTS         .asm    0       -- Return from Subroutine
0x0001  BSR   BSR         .asm    1       -- Branch to subroutine
0x0002 FTCH   FTCH        .asm    2       -- Fetch next instruction
0x0003  BMW   BMW         .asm    3       -- Branch multi-way
0x0004 BRV0   BRV0        .asm    4       -- Branch via 0
0x0005 BRV1   BRV1        .asm    5       -- Branch via 1
0x0006 BRV2   BRV2        .asm    6       -- Branch via 2
0x0007 BRV3   BRV3        .asm    7       -- Branch via 3
0x0008 BTH0   BTH0        .asm    8       -- Branch if T0 is high
0x0009 BTH1   BTH1        .asm    9       -- Branch if T1 is high
0x000A BTH2   BTH2        .asm    10      -- Branch if T2 is high
0x000B BTH3   BTH3        .asm    11      -- Branch if T3 is high
0x000C BTL0   BTL0        .asm    12      -- Branch if T0 is low
0x000D BTL1   BTL1        .asm    13      -- Branch if T1 is low
0x000E BTL2   BTL2        .asm    14      -- Branch if T2 is low
0x000F BTL3   BTL3        .asm    15      -- Branch if T3 is low
 
-- Equates --
0x0000 PC          .equ    0       -- NA <= PC (default)
0x0001 Inc         .equ    1       -- NA <= PC  + 1
0x0002 MAR         .equ    2       -- NA <= MAR + 0
0x0003 Nxt         .equ    3       -- NA <= MAR + 1
0x0004 Stk         .equ    4       -- NA <= SP  + 0
0x0005 DPN         .equ    5       -- NA <= {  0, OP1} + 0
0x0006 DPX         .equ    6       -- NA <= {  0, OP1} + {0, X}
0x0007 DPY         .equ    7       -- NA <= {  0, OP1} + {0, Y}
0x0008 LDA         .equ    8       -- NA <= {OP2, OP1} + 0
0x000E LDAX        .equ    14      -- NA <= {OP2, OP1} + {0, X}
0x000F LDAY        .equ    15      -- NA <= {OP2, OP1} + {0, Y}
0x0001 Pls         .equ    1       -- PC <= PC + 1
0x0002 Jmp         .equ    2       -- PC <= NA
0x0003 Rel         .equ    3       -- PC <= PC + (CC ? {{8{DI[7]}}, DI} : 1)
0x0001 WR          .equ    1       -- Bus Operand Write
0x0002 RD          .equ    2       -- Bus Operand Read
0x0003 IF          .equ    3       -- Bus Insruction Fetch
0x0000 ALU         .equ    0       -- M   <= DI
0x0001 OP2         .equ    1       -- OP2 <= DI
0x0002 OP1         .equ    2       -- OP1 <= DI
0x0003 IR          .equ    3       -- IR  <= DI
0x0001 PCH         .equ    1       -- DO  <= PCH
0x0002 PCL         .equ    2       -- DO  <= PCL
0x0003 PSW         .equ    3       -- DO  <= PSW (P)
0x0002 Psh         .equ    2       -- S <= S - 1
0x0003 Pop         .equ    3       -- S <= S + 1
0x0001 WE_A        .equ    1       -- Write Enable A
0x0002 WE_X        .equ    2       -- Write Enable X
0x0003 WE_Y        .equ    3       -- Write Enable Y
0x0004 WE_R        .equ    4       -- Write Enable Register - write selected register
0x0005 WE_S        .equ    5       -- Write Enable S
0x0006 WE_P        .equ    6       -- Write Enable P
0x0007 WE_M        .equ    7       -- Write Enable M(emory)
0x0001 ISR         .equ    1       -- Assert ISR: Clear D, Set I
 
-- Defines --
0x0004 Inst        .def    4       -- Instruction
0x0009 BA          .def    9       -- Branch Address
0x0001 ZP          .def    1       -- Force mod 256 Address Calculation
0x0002 MemTyp      .def    2       -- Memory Access Type Control Field
0x0004 NA_Cntl     .def    4       -- Next Address Control Field
0x0002 PC_Cntl     .def    2       -- Program Counter Control Field
0x0002 IO_Cntl     .def    2       -- I/O Cycle Control Field
0x0002 DIO_Cntl    .def    2       -- Data Input/Output Demux/Mux Control Field
0x0002 Stk_Cntl    .def    2       -- ALU Stack Pointer Control Field
0x0003 RegWE_Cntl  .def    3       -- Register Write Enable (A, X, Y, S, P)
0x0001 PSW_Cntl    .def    1       -- Asserted to Clear D and Set I in PSW
 
-- Labels --
0x0000 _Start
0x0020 _Nxt
0x0020 _Psh
0x0020 _Pop
0x0020 _Rel
0x0020 _Imm
0x0021 _Int
0x0022 _Brk
0x0025 _JSR
0x0028 _RTI
0x002B _RTS
0x002C _Jmp
0x002D _JmpI
0x0030 _JmpXI
0x0033 _RO_DP
0x0034 _RO_DPX
0x0035 _RO_DPY
0x0036 _RO_DPI
0x0039 _RO_DPXI
0x003C _RO_DPIY
0x003F _RO_Abs
0x0041 _RO_AbsX
0x0043 _RO_AbsY
0x0045 _WO_DP
0x0046 _WO_DPX
0x0047 _WO_DPY
0x0048 _WO_DPI
0x004B _WO_DPXI
0x004E _WO_DPIY
0x0051 _WO_Abs
0x0053 _WO_AbsX
0x0055 _WO_AbsY
0x0060 _RMW
0x0062 _RMW_DP
0x0064 _RMW_DPX
0x0066 _RMW_DPY
0x0068 _RMW_Abs
0x006B _RMW_AbsX
0x006E _RMW_AbsY
0x0071 _End_uPgm
0x0100 _IDEC_Start
0x0100 _BRK_imm
0x0101 _BPL_rel
0x0102 _JSR_abs
0x0103 _BMI_rel
0x0104 _RTI_imp
0x0105 _BVC_rel
0x0106 _RTS_imp
0x0107 _BVS_rel
0x0108 _BRA_rel
0x0109 _BCC_re
0x010A _LDY_imm
0x010B _BCS_rel
0x010C _CPY_imm
0x010D _BNE_rel
0x010E _CPX_imm
0x010F _BEQ_rel
0x0110 _ORA_dpXi
0x0111 _ORA_dpiY
0x0112 _AND_dpXi
0x0113 _AND_dpiY
0x0114 _EOR_dpXi
0x0115 _EOR_dpiY
0x0116 _ADC_dpXi
0x0117 _ADC_dpiY
0x0118 _STA_dpXi
0x0119 _STA_dpiY
0x011A _LDA_dpXi
0x011B _LDA_dpiY
0x011C _CMP_dpXi
0x011D _CMP_dpiY
0x011E _SBC_dpXi
0x011F _SBC_dpiY
0x0120 _NOP_02
0x0121 _ORA_dpi
0x0122 _NOP_22
0x0123 _AND_dpi
0x0124 _NOP_42
0x0125 _EOR_dpi
0x0126 _NOP_62
0x0127 _ADC_dpi
0x0128 _NOP_82
0x0129 _STA_dpi
0x012A _LDX_imm
0x012B _LDA_dpi
0x012C _NOP_C2
0x012D _CMP_dpi
0x012E _NOP_E2
0x012F _SBC_dpi
0x0130 _NOP_03
0x0131 _NOP_13
0x0132 _NOP_23
0x0133 _NOP_33
0x0134 _NOP_43
0x0135 _NOP_53
0x0136 _NOP_63
0x0137 _NOP_73
0x0138 _NOP_83
0x0139 _NOP_93
0x013A _NOP_A3
0x013B _NOP_B3
0x013C _NOP_C3
0x013D _NOP_D3
0x013E _NOP_E3
0x013F _NOP_F3
0x0140 _TSB_dp
0x0141 _TRB_dp
0x0142 _BIT_dp
0x0143 _BIT_dpX
0x0144 _NOP_44
0x0145 _NOP_54
0x0146 _STZ_dp
0x0147 _STZ_dpX
0x0148 _STY_dp
0x0149 _STY_dpX
0x014A _LDY_dp
0x014B _LDY_dpX
0x014C _CPY_dp
0x014D _NOP_D4
0x014E _CPX_dp
0x014F _NOP_F4
0x0150 _ORA_dp
0x0151 _ORA_dpX
0x0152 _AND_dp
0x0153 _AND_dpX
0x0154 _EOR_dp
0x0155 _EOR_dpX
0x0156 _ADC_dp
0x0157 _ADC_dpX
0x0158 _STA_dp
0x0159 _STA_dpX
0x015A _LDA_dp
0x015B _LDA_dpX
0x015C _CMP_dp
0x015D _CMP_dpX
0x015E _SBC_dp
0x015F _SBC_dpX
0x0160 _ASL_dp
0x0161 _ASL_dpX
0x0162 _ROL_dp
0x0163 _ROL_dpX
0x0164 _LSR_dp
0x0165 _LSR_dpX
0x0166 _ROR_dp
0x0167 _ROR_dpX
0x0168 _STX_dp
0x0169 _STX_dpY
0x016A _LDX_dp
0x016B _LDX_dpY
0x016C _DEC_dp
0x016D _DEC_dpX
0x016E _INC_dp
0x016F _INC_dpX
0x0170 _NOP_07
0x0171 _NOP_17
0x0172 _NOP_27
0x0173 _NOP_37
0x0174 _NOP_47
0x0175 _NOP_57
0x0176 _NOP_67
0x0177 _NOP_77
0x0178 _NOP_87
0x0179 _NOP_97
0x017A _NOP_A7
0x017B _NOP_B7
0x017C _NOP_C7
0x017D _NOP_D7
0x017E _NOP_E7
0x017F _NOP_F7
0x0180 _PHP
0x0181 _CLC
0x0182 _PLP
0x0183 _SEC
0x0184 _PHA
0x0185 _CLI
0x0186 _PLA
0x0187 _SEI
0x0188 _DEY
0x0189 _TYA
0x018A _TAY
0x018B _CLV
0x018C _INY
0x018D _CLD
0x018E _INX
0x018F _SED
0x0190 _ORA_imm
0x0191 _ORA_absY
0x0192 _AND_imm
0x0193 _AND_absY
0x0194 _EOR_imm
0x0195 _EOR_absY
0x0196 _ADC_imm
0x0197 _ADC_absY
0x0198 _BIT_imm
0x0199 _STA_absY
0x019A _LDA_imm
0x019B _LDA_absY
0x019C _CMP_imm
0x019D _CMP_absY
0x019E _SBC_imm
0x019F _SBC_absY
0x01A0 _ASL_A
0x01A1 _INC_A
0x01A2 _ROL_A
0x01A3 _DEC_A
0x01A4 _LSR_A
0x01A5 _PHY
0x01A6 _ROR_A
0x01A7 _PLY
0x01A8 _TXA
0x01A9 _TXS
0x01AA _TAX
0x01AB _TSX
0x01AC _DEX
0x01AD _PHX
0x01AE _NOP
0x01AF _PLX
0x01B0 _NOP_0B
0x01B1 _NOP_1B
0x01B2 _NOP_2B
0x01B3 _NOP_3B
0x01B4 _NOP_4B
0x01B5 _NOP_5B
0x01B6 _NOP_6B
0x01B7 _NOP_7B
0x01B8 _NOP_8B
0x01B9 _NOP_9B
0x01BA _NOP_AB
0x01BB _NOP_BB
0x01BC _NOP_CB
0x01BD _NOP_DB
0x01BE _NOP_EB
0x01BF _NOP_FB
0x01C0 _TSB_abs
0x01C1 _TRB_abs
0x01C2 _BIT_abs
0x01C3 _BIT_absX
0x01C4 _JMP_abs
0x01C5 _NOP_5C
0x01C6 _JMP_absi
0x01C7 _JMP_absXi
0x01C8 _STY_abs
0x01C9 _STZ_abs
0x01CA _LDY_abs
0x01CB _LDY_absX
0x01CC _CPY_abs
0x01CD _NOP_DC
0x01CE _CPX_abs
0x01CF _NOP_FC
0x01D0 _ORA_abs
0x01D1 _ORA_absX
0x01D2 _AND_abs
0x01D3 _AND_absX
0x01D4 _EOR_abs
0x01D5 _EOR_absX
0x01D6 _ADC_abs
0x01D7 _ADC_absX
0x01D8 _STA_abs
0x01D9 _STA_absX
0x01DA _LDA_abs
0x01DB _LDA_absX
0x01DC _CMP_abs
0x01DD _CMP_absX
0x01DE _SBC_abs
0x01DF _SBC_absX
0x01E0 _ASL_abs
0x01E1 _ASL_absX
0x01E2 _ROL_abs
0x01E3 _ROL_absX
0x01E4 _LSR_abs
0x01E5 _LSR_absX
0x01E6 _ROR_abs
0x01E7 _ROR_absX
0x01E8 _STX_abs
0x01E9 _STZ_absX
0x01EA _LDX_abs
0x01EB _LDX_absY
0x01EC _DEC_abs
0x01ED _DEC_absX
0x01EE _INC_abs
0x01EF _INC_absX
0x01F0 _NOP_0F
0x01F1 _NOP_1F
0x01F2 _NOP_2F
0x01F3 _NOP_3F
0x01F4 _NOP_4F
0x01F5 _NOP_5F
0x01F6 _NOP_6F
0x01F7 _NOP_7F
0x01F8 _NOP_8F
0x01F9 _NOP_9F
0x01FA _NOP_AF
0x01FB _NOP_BF
0x01FC _NOP_CF
0x01FD _NOP_DF
0x01FE _NOP_EF
0x01FF _NOP_FF
0x0200 _Last
0x0200 _end
 
File  Prog     
Line  Line   Opcode                                Line
0563 0x0000 _Start: .org 0
0564 0x0000  41000000 BRV0 _Nxt,0,0 -- Initial Fetch after Reset
0566  -- this space reserved for future use - boot loader for the microprogram ROMs
0568  --------------------------------------------------------------------------------
0569  --------------------------------------------------------------------------------
0570  -- 2-Way Jump Table: _Nxt and _Int
0571  --------------------------------------------------------------------------------
0572  --------------------------------------------------------------------------------
0573  -- Instruction Fetch and Execute Microstate
0574  --------------------------------------------------------------------------------
0000 0x0001  00000000 added by program
0000 0x0002  00000000 added by program
0000 0x0003  00000000 added by program
0000 0x0004  00000000 added by program
0000 0x0005  00000000 added by program
0000 0x0006  00000000 added by program
0000 0x0007  00000000 added by program
0000 0x0008  00000000 added by program
0000 0x0009  00000000 added by program
0000 0x000A  00000000 added by program
0000 0x000B  00000000 added by program
0000 0x000C  00000000 added by program
0000 0x000D  00000000 added by program
0000 0x000E  00000000 added by program
0000 0x000F  00000000 added by program
0000 0x0010  00000000 added by program
0000 0x0011  00000000 added by program
0000 0x0012  00000000 added by program
0000 0x0013  00000000 added by program
0000 0x0014  00000000 added by program
0000 0x0015  00000000 added by program
0000 0x0016  00000000 added by program
0000 0x0017  00000000 added by program
0000 0x0018  00000000 added by program
0000 0x0019  00000000 added by program
0000 0x001A  00000000 added by program
0000 0x001B  00000000 added by program
0000 0x001C  00000000 added by program
0000 0x001D  00000000 added by program
0000 0x001E  00000000 added by program
0000 0x001F  00000000 added by program
0576 0x0020 _Nxt: .org 32
0577 0x0020 _Psh:
0578 0x0020 _Pop:
0579 0x0020 _Rel:
0580 0x0020 _Imm:
0581 0x0020  510107C8 BRV1 _Nxt,0,1,, Pls, IF, IR,, WE_R -- Instruction Fetch/Execute
0583  --------------------------------------------------------------------------------
0584  -- Interrupt Entry - NMI, (unmasked) IRQ (falls through to second state of BRK)
0585  --------------------------------------------------------------------------------
0587 0x0021 _Int:
0588 0x0021  61114168 BRV2 _Brk,0,1, Stk, , WR, PCH, Psh, WE_R -- Push PCH, capture Vector
0590  --------------------------------------------------------------------------------
0591  -- BRK Entry - BRK #imm (_Int falls through to _Brk, see comment above)
0592  --------------------------------------------------------------------------------
0594 0x0022 _Brk:
0595 0x0022  211141A0 FTCH $,0,1, Stk,, WR, PCL, Psh -- Push PCL
0596 0x0023  211949E1 FTCH $,0,1, Stk, Jmp, WR, PSW, Psh,, ISR -- Push P; Clr D, Set I
0597 0x0024  512107C0 BRV1 $,0,1,, Pls, IF, IR -- Instruction Fetch
0599  --------------------------------------------------------------------------------
0600  -- Jump To Subroutine - JSR Abs (Not interruptable)
0601  --------------------------------------------------------------------------------
0603 0x0025 _JSR:
0604 0x0025  21290340 FTCH $,0,1,,, IF, OP2 -- Load Indirect Dst Ptr Lo
0605 0x0026  21314160 FTCH $,0,1, Stk,, WR, PCH, Psh -- Push PC Hi
0606 0x0027  410149A0 BRV0 _Nxt,0,1, Stk, Jmp, WR, PCL, Psh -- Push PC Lo
0608  --------------------------------------------------------------------------------
0609  -- Return from Interrupt - RTI (Not interruptable)
0610  --------------------------------------------------------------------------------
0612 0x0028 _RTI:
0613 0x0028  214142BC FTCH $,0,1, Stk,, RD, OP1, Pop, WE_P -- Pop PCL
0614 0x0029  21494A70 FTCH $,0,1, Stk, Jmp, RD, OP2, Pop -- Pop PCH
0615  --
0616 0x002A  515107C0 BRV1 $,0,1,, Pls, IF, IR -- Next, no Reg_WE, P okay
0618  --------------------------------------------------------------------------------
0619  -- Return From Subroutine - RTS (Not interruptable)
0620  --------------------------------------------------------------------------------
0622 0x002B _RTS:
0623 0x002B  41014A70 BRV0 _Nxt,0,1, Stk, Jmp, RD, OP2, Pop -- Pop PCH
0625  --------------------------------------------------------------------------------
0626  -- Jump Absolute - JMP Abs (Not interruptable)
0627  --------------------------------------------------------------------------------
0629 0x002C _Jmp:
0630 0x002C  41010B40 BRV0 _Nxt,0,1,, Jmp, IF, OP2
0632  --------------------------------------------------------------------------------
0633  -- Jump Indirect - JMP (Abs) (Not interruptable)
0634  --------------------------------------------------------------------------------
0636 0x002D _JmpI:
0637 0x002D  21690740 FTCH $,0,1,, Pls, IF, OP2 -- Load Indirect Dst Ptr Lo
0638 0x002E  21718280 FTCH $,0,1, LDA,, RD, OP1 -- Read Indirect Dst Ptr Hi
0639 0x002F  41013A40 BRV0 _Nxt,0,1, Nxt, Jmp, RD, OP2 -- Goto Next
0641  --------------------------------------------------------------------------------
0642  -- Jump Pre-Indexed Indirect - JMP (Abs, X) (Not interruptable)
0643  --------------------------------------------------------------------------------
0645 0x0030 _JmpXI:
0646 0x0030  21810740 FTCH $,0,1,, Pls, IF, OP2 -- Load Indirect Dst Ptr Lo
0647 0x0031  2189E280 FTCH $,0,1, LDAX,, RD, OP1 -- Read Indirect Dst Ptr Hi
0648 0x0032  41013A40 BRV0 _Nxt,0,1, Nxt, Jmp, RD, OP2 -- Goto Next
0650  --------------------------------------------------------------------------------
0651  -- Memory Read-Only Data Page Direct - xxx DP
0652  --------------------------------------------------------------------------------
0654 0x0033 _RO_DP:
0655 0x0033  31055280 BMW _Nxt,1,1, DPN,, RD, OP1 -- Read DP Mem
0657  -----------------------------------------------------------------------------
0658  -- Memory Read-Only Pre-Indexed Data Page Direct - xxx DP, X
0659  --------------------------------------------------------------------------------
0661 0x0034 _RO_DPX:
0662 0x0034  31056280 BMW _Nxt,1,1, DPX,, RD, OP1 -- Read DP Mem
0664  --------------------------------------------------------------------------------
0665  -- Memory Read-Only Post-Indexed Data Page Direct - xxx DP, Y
0666  --------------------------------------------------------------------------------
0668 0x0035 _RO_DPY:
0669 0x0035  31057280 BMW _Nxt,1,1, DPY,, RD, OP1 -- Read DP Mem
0671  ------------------------------------------------------------------------------
0672  -- Memory Read-Only Data Page Indirect - xxx (DP)
0673  --------------------------------------------------------------------------------
0675 0x0036 _RO_DPI:
0676 0x0036  21B55280 FTCH $,1,1, DPN,, RD, OP1 -- Read DP Mem Ptr Lo
0677 0x0037  21BD3240 FTCH $,1,1, Nxt,, RD, OP2 -- Read DP Mem Ptr Hi
0678 0x0038  31018280 BMW _Nxt,0,1, LDA,, RD, OP1 -- Read Operand
0680  --------------------------------------------------------------------------------
0681  -- Memory Read-Only Pre-Indexed Data Page Indirect - xxx (DP, X)
0682  --------------------------------------------------------------------------------
0684 0x0039 _RO_DPXI:
0685 0x0039  21CD6280 FTCH $,1,1, DPX,, RD, OP1 -- Read DP Mem Ptr Lo (DP,X)
0686 0x003A  21D53240 FTCH $,1,1, Nxt,, RD, OP2 -- Read DP Mem Ptr Hi
0687 0x003B  31018280 BMW _Nxt,0,1, LDA,, RD, OP1 -- Read Operand
0689  --------------------------------------------------------------------------------
0690  -- Memory Read-Only Post-Indexed Data Page Indirect - xxx (DP), Y
0691  --------------------------------------------------------------------------------
0693 0x003C _RO_DPIY:
0694 0x003C  21E55280 FTCH $,1,1, DPN,, RD, OP1 -- Read DP Mem Ptr Lo
0695 0x003D  21ED3240 FTCH $,1,1, Nxt,, RD, OP2 -- Read DP Mem Ptr Hi
0696 0x003E  3101F280 BMW _Nxt,0,1, LDAY,, RD, OP1 -- Read Operand (DP),Y
0698  --------------------------------------------------------------------------------
0699  -- Memory Read-Only Absolute - xxx Abs
0700  --------------------------------------------------------------------------------
0702 0x003F _RO_Abs:
0703 0x003F  21F90740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0704 0x0040  31018280 BMW _Nxt,0,1, LDA,, RD, OP1 -- Read Operand
0706  --------------------------------------------------------------------------------
0707  -- Memory Read-Only Pre-Indexed Absolute - xxx Abs, X
0708  --------------------------------------------------------------------------------
0710 0x0041 _RO_AbsX:
0711 0x0041  22090740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0712 0x0042  3101E280 BMW _Nxt,0,1, LDAX,, RD, OP1 -- Read Operand Abs,X
0714  --------------------------------------------------------------------------------
0715  -- Memory Read-Only Post-Indexed Absolute - xxx Abs, Y
0716  --------------------------------------------------------------------------------
0718 0x0043 _RO_AbsY:
0719 0x0043  22190740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0720 0x0044  3101F280 BMW _Nxt,0,1, LDAY,, RD, OP1 -- Read Operand Abs,Y
0722  --------------------------------------------------------------------------------
0723  -- Memory Write-Only Data Page Direct - xxx DP
0724  --------------------------------------------------------------------------------
0726 0x0045 _WO_DP:
0727 0x0045  31055100 BMW _Nxt,1,1, DPN,, WR -- Write to DP
0729  -----------------------------------------------------------------------------
0730  -- Memory Write-Only Pre-Indexed Data Page Direct - xxx DP, X
0731  --------------------------------------------------------------------------------
0733 0x0046 _WO_DPX:
0734 0x0046  31056100 BMW _Nxt,1,1, DPX,, WR -- Write to DP,X
0736  -----------------------------------------------------------------------------
0737  -- Memory Write-Only Post-Indexed Data Page Direct - xxx DP, Y
0738  --------------------------------------------------------------------------------
0740 0x0047 _WO_DPY:
0741 0x0047  31057100 BMW _Nxt,1,1, DPY,, WR -- Write to DP,Y
0743  --------------------------------------------------------------------------------
0744  -- Memory Write-Only Data Page Indirect - xxx (DP)
0745  --------------------------------------------------------------------------------
0747 0x0048 _WO_DPI:
0748 0x0048  22455280 FTCH $,1,1, DPN,, RD, OP1 -- Read DP Mem Ptr Lo
0749 0x0049  224D3240 FTCH $,1,1, Nxt,, RD, OP2 -- Read DP Mem Ptr Hi
0750 0x004A  31018100 BMW _Nxt,0,1, LDA,, WR -- Write to (DP)
0752  --------------------------------------------------------------------------------
0753  -- Memory Write-Only Data Page Indirect - xxx (DP, X)
0754  --------------------------------------------------------------------------------
0756 0x004B _WO_DPXI:
0757 0x004B  225D6280 FTCH $,1,1, DPX,, RD, OP1 -- Read DP Mem Ptr Lo
0758 0x004C  22653240 FTCH $,1,1, Nxt,, RD, OP2 -- Read DP Mem Ptr Hi
0759 0x004D  31018100 BMW _Nxt,0,1, LDA,, WR -- Write to (DP)
0761  --------------------------------------------------------------------------------
0762  -- Memory Write-Only Post-Indexed Data Page Indirect - xxx (DP), Y
0763  --------------------------------------------------------------------------------
0765 0x004E _WO_DPIY:
0766 0x004E  22755280 FTCH $,1,1, DPN,, RD, OP1 -- Read DP Mem Ptr Lo
0767 0x004F  227D3240 FTCH $,1,1, Nxt,, RD, OP2 -- Read DP Mem Ptr Hi
0768 0x0050  3101F100 BMW _Nxt,0,1, LDAY,, WR -- Write to (DP)
0770  --------------------------------------------------------------------------------
0771  -- Memory Write-Only Absolute - xxx Abs
0772  --------------------------------------------------------------------------------
0774 0x0051 _WO_Abs:
0775 0x0051  22890740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0776 0x0052  31018100 BMW _Nxt,0,1, LDA,, WR -- Write to Abs
0778  --------------------------------------------------------------------------------
0779  -- Memory Write-Only Pre-Indexed Absolute - xxx Abs, X
0780  --------------------------------------------------------------------------------
0782 0x0053 _WO_AbsX:
0783 0x0053  22990740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0784 0x0054  3101E100 BMW _Nxt,0,1, LDAX,, WR -- Write to Abs,X
0786  --------------------------------------------------------------------------------
0787  -- Memory Write-Only Post-Indexed Absolute - xxx Abs, Y
0788  --------------------------------------------------------------------------------
0790 0x0055 _WO_AbsY:
0791 0x0055  22A90740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0792 0x0056  3101F100 BMW _Nxt,0,1, LDAY,, WR -- Write to Abs,Y
0794  --------------------------------------------------------------------------------
0795  -- 2-way Read-Modify-Write Instruction/Interrupt Jump Table
0796  --------------------------------------------------------------------------------
0000 0x0057  00000000 added by program
0000 0x0058  00000000 added by program
0000 0x0059  00000000 added by program
0000 0x005A  00000000 added by program
0000 0x005B  00000000 added by program
0000 0x005C  00000000 added by program
0000 0x005D  00000000 added by program
0000 0x005E  00000000 added by program
0000 0x005F  00000000 added by program
0798 0x0060 _RMW: .org 96
0799 0x0060  530107C0 BRV1 _RMW,0,1,, Pls, IF, IR -- Instruction Fetch/Execute
0800 0x0061  61114160 BRV2 _Brk,0,1, Stk, , WR, PCH, Psh -- Push PCH, capture Vector
0802  --------------------------------------------------------------------------------
0803  -- Memory Read-Modify-Write Data Page Direct - xxx DP
0804  --------------------------------------------------------------------------------
0806 0x0062 _RMW_DP:
0807 0x0062  23155280 FTCH $,1,1, DPN,, RD, OP1 -- Read from DP
0808 0x0063  33052108 BMW _RMW,1,1, MAR,, WR,,,WE_R -- Write to DP
0810  --------------------------------------------------------------------------------
0811  -- Memory Read-Modify-Write Pre-Indexed Data Page Direct - xxx DP, X
0812  --------------------------------------------------------------------------------
0814 0x0064 _RMW_DPX:
0815 0x0064  23256280 FTCH $,1,1, DPX,, RD, OP1 -- Read from DP,X
0816 0x0065  33052108 BMW _RMW,1,1, MAR,, WR,,,WE_R -- Write to DP,X
0818  --------------------------------------------------------------------------------
0819  -- Memory Read-Modify-Write Post-Indexed Data Page Direct - xxx DP, Y
0820  --------------------------------------------------------------------------------
0822 0x0066 _RMW_DPY:
0823 0x0066  23357280 FTCH $,1,1, DPY,, RD, OP1 -- Read from DP,Y
0824 0x0067  33052108 BMW _RMW,1,1, MAR,, WR,,,WE_R -- Write to DP,Y
0826  --------------------------------------------------------------------------------
0827  -- Memory Read-Modify-Write Absolute - xxx Abs
0828  --------------------------------------------------------------------------------
0830 0x0068 _RMW_Abs:
0831 0x0068  23410740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0832 0x0069  23498280 FTCH $,0,1, LDA,, RD, OP1 -- Read from Abs
0833 0x006A  33012108 BMW _RMW,0,1, MAR,, WR,,,WE_R -- Write to Abs
0835  --------------------------------------------------------------------------------
0836  -- Memory Read-Modify-Write Pre-Indexed Absolute - xxx Abs, X
0837  --------------------------------------------------------------------------------
0839 0x006B _RMW_AbsX:
0840 0x006B  23590740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0841 0x006C  2361E280 FTCH $,0,1, LDAX,, RD, OP1 -- Read from Abs,X
0842 0x006D  33012108 BMW _RMW,0,1, MAR,, WR,,,WE_R -- Write to Abs,X
0844  --------------------------------------------------------------------------------
0845  -- Memory Read-Modify-Write Post-Indexed Absolute - xxx Abs, Y
0846  --------------------------------------------------------------------------------
0848 0x006E _RMW_AbsY:
0849 0x006E  23710740 FTCH $,0,1,, Pls, IF, OP2 -- Read Mem Ptr Hi
0850 0x006F  2379F280 FTCH $,0,1, LDAY,, RD, OP1 -- Read from Abs,Y
0851 0x0070  33012108 BMW _RMW,0,1, MAR,, WR,,,WE_R -- Write to Abs,Y
0853  --------------------------------------------------------------------------------
0854  -- End of Microprogram
0855  --------------------------------------------------------------------------------
0857 0x0071 _End_uPgm:
0000 0x0071  00000000 added by program
0000 0x0072  00000000 added by program
0000 0x0073  00000000 added by program
0000 0x0074  00000000 added by program
0000 0x0075  00000000 added by program
0000 0x0076  00000000 added by program
0000 0x0077  00000000 added by program
0000 0x0078  00000000 added by program
0000 0x0079  00000000 added by program
0000 0x007A  00000000 added by program
0000 0x007B  00000000 added by program
0000 0x007C  00000000 added by program
0000 0x007D  00000000 added by program
0000 0x007E  00000000 added by program
0000 0x007F  00000000 added by program
0000 0x0080  00000000 added by program
0000 0x0081  00000000 added by program
0000 0x0082  00000000 added by program
0000 0x0083  00000000 added by program
0000 0x0084  00000000 added by program
0000 0x0085  00000000 added by program
0000 0x0086  00000000 added by program
0000 0x0087  00000000 added by program
0000 0x0088  00000000 added by program
0000 0x0089  00000000 added by program
0000 0x008A  00000000 added by program
0000 0x008B  00000000 added by program
0000 0x008C  00000000 added by program
0000 0x008D  00000000 added by program
0000 0x008E  00000000 added by program
0000 0x008F  00000000 added by program
0000 0x0090  00000000 added by program
0000 0x0091  00000000 added by program
0000 0x0092  00000000 added by program
0000 0x0093  00000000 added by program
0000 0x0094  00000000 added by program
0000 0x0095  00000000 added by program
0000 0x0096  00000000 added by program
0000 0x0097  00000000 added by program
0000 0x0098  00000000 added by program
0000 0x0099  00000000 added by program
0000 0x009A  00000000 added by program
0000 0x009B  00000000 added by program
0000 0x009C  00000000 added by program
0000 0x009D  00000000 added by program
0000 0x009E  00000000 added by program
0000 0x009F  00000000 added by program
0000 0x00A0  00000000 added by program
0000 0x00A1  00000000 added by program
0000 0x00A2  00000000 added by program
0000 0x00A3  00000000 added by program
0000 0x00A4  00000000 added by program
0000 0x00A5  00000000 added by program
0000 0x00A6  00000000 added by program
0000 0x00A7  00000000 added by program
0000 0x00A8  00000000 added by program
0000 0x00A9  00000000 added by program
0000 0x00AA  00000000 added by program
0000 0x00AB  00000000 added by program
0000 0x00AC  00000000 added by program
0000 0x00AD  00000000 added by program
0000 0x00AE  00000000 added by program
0000 0x00AF  00000000 added by program
0000 0x00B0  00000000 added by program
0000 0x00B1  00000000 added by program
0000 0x00B2  00000000 added by program
0000 0x00B3  00000000 added by program
0000 0x00B4  00000000 added by program
0000 0x00B5  00000000 added by program
0000 0x00B6  00000000 added by program
0000 0x00B7  00000000 added by program
0000 0x00B8  00000000 added by program
0000 0x00B9  00000000 added by program
0000 0x00BA  00000000 added by program
0000 0x00BB  00000000 added by program
0000 0x00BC  00000000 added by program
0000 0x00BD  00000000 added by program
0000 0x00BE  00000000 added by program
0000 0x00BF  00000000 added by program
0000 0x00C0  00000000 added by program
0000 0x00C1  00000000 added by program
0000 0x00C2  00000000 added by program
0000 0x00C3  00000000 added by program
0000 0x00C4  00000000 added by program
0000 0x00C5  00000000 added by program
0000 0x00C6  00000000 added by program
0000 0x00C7  00000000 added by program
0000 0x00C8  00000000 added by program
0000 0x00C9  00000000 added by program
0000 0x00CA  00000000 added by program
0000 0x00CB  00000000 added by program
0000 0x00CC  00000000 added by program
0000 0x00CD  00000000 added by program
0000 0x00CE  00000000 added by program
0000 0x00CF  00000000 added by program
0000 0x00D0  00000000 added by program
0000 0x00D1  00000000 added by program
0000 0x00D2  00000000 added by program
0000 0x00D3  00000000 added by program
0000 0x00D4  00000000 added by program
0000 0x00D5  00000000 added by program
0000 0x00D6  00000000 added by program
0000 0x00D7  00000000 added by program
0000 0x00D8  00000000 added by program
0000 0x00D9  00000000 added by program
0000 0x00DA  00000000 added by program
0000 0x00DB  00000000 added by program
0000 0x00DC  00000000 added by program
0000 0x00DD  00000000 added by program
0000 0x00DE  00000000 added by program
0000 0x00DF  00000000 added by program
0000 0x00E0  00000000 added by program
0000 0x00E1  00000000 added by program
0000 0x00E2  00000000 added by program
0000 0x00E3  00000000 added by program
0000 0x00E4  00000000 added by program
0000 0x00E5  00000000 added by program
0000 0x00E6  00000000 added by program
0000 0x00E7  00000000 added by program
0000 0x00E8  00000000 added by program
0000 0x00E9  00000000 added by program
0000 0x00EA  00000000 added by program
0000 0x00EB  00000000 added by program
0000 0x00EC  00000000 added by program
0000 0x00ED  00000000 added by program
0000 0x00EE  00000000 added by program
0000 0x00EF  00000000 added by program
0000 0x00F0  00000000 added by program
0000 0x00F1  00000000 added by program
0000 0x00F2  00000000 added by program
0000 0x00F3  00000000 added by program
0000 0x00F4  00000000 added by program
0000 0x00F5  00000000 added by program
0000 0x00F6  00000000 added by program
0000 0x00F7  00000000 added by program
0000 0x00F8  00000000 added by program
0000 0x00F9  00000000 added by program
0000 0x00FA  00000000 added by program
0000 0x00FB  00000000 added by program
0000 0x00FC  00000000 added by program
0000 0x00FD  00000000 added by program
0000 0x00FE  00000000 added by program
0000 0x00FF  00000000 added by program
0859 0x0100 _IDEC_Start: .org 256
0861  --------------------------------------------------------------------------------
0862  -- Start of Instruction Decode Table (Entry for each Opcode)
0863  --
0864  -- Instead of being organized in numerical order, the table is organized by
0865  -- rows: the least significant nibble and the most significant nibble of the
0866  -- opcode are swapped. This organization more clearly shows the arrangement of
0867  -- the addressing modes of the WDC W65C02 microprocessor being emulated. It al-
0868  -- so more clearly shows the regularity of the ALU instructions that are imple-
0869  -- mented. The implementation of the microprogram is first based on the addres-
0870  -- sing mode, and then on the ALU function. Single cycle instructions will be
0871  -- easily recognized in the following table because their table entry use the
0872  -- BRV3 MPC instruction. Multi-cycle instructions use the BRV0 MPC instruction
0873  -- to vector a microroutine in the lower 256 words of the microprogram ROM/RAM.
0874  -- Single byte instructions such as BRK, RTS, RTI, and register push/pull in-
0875  -- structions (PHA, PLA, PHP, PLP, PHX, PLX, PHY, PLY), and multi-byte instruc-
0876  -- tions like JSR abs are implemented with special microroutines that perform
0877  -- the necessary stack accesses. The remainder of the microroutines are orga-
0878  -- nized by addressing mode, and whether the mode is used in a RO, WO, or RMW
0879  -- manner.
0880  --
0881  -- Microprogram Word Format:
0882  --
0883  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
0884  --
0885  --------------------------------------------------------------------------------
0887  --------------------------------------------------------------------------------
0888  -- Row 0 : 0x00-0xF0 (All branches/JMPs/JSR implemented as uninterruptable)
0889  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
0890  --------------------------------------------------------------------------------
0891 0x0100 _BRK_imm:
0892 0x0100  6111416C BRV2 _Brk,0,1, Stk,, WR, PCH, Psh, WE_P -- Start Break Handler
0893 0x0101 _BPL_rel:
0894 0x0101  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0895 0x0102 _JSR_abs:
0896 0x0102  41290780 BRV0 _JSR,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
0897 0x0103 _BMI_rel:
0898 0x0103  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0899 0x0104 _RTI_imp:
0900 0x0104  414142B0 BRV0 _RTI,0,1, Stk,, RD, OP1, Pop -- Read PSW from Stack
0901 0x0105 _BVC_rel:
0902 0x0105  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0903 0x0106 _RTS_imp:
0904 0x0106  415942B0 BRV0 _RTS,0,1, Stk,, RD, OP1, Pop -- Read PCL from Stack
0905 0x0107 _BVS_rel:
0906 0x0107  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0907 0x0108 _BRA_rel:
0908 0x0108  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0909 0x0109 _BCC_rel
0910 0x0109  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0911 0x010A _LDY_imm:
0912 0x010A  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read #imm Value
0913 0x010B _BCS_rel:
0914 0x010B  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0915 0x010C _CPY_imm:
0916 0x010C  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read #imm Value
0917 0x010D _BNE_rel:
0918 0x010D  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0919 0x010E _CPX_imm:
0920 0x010E  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read #imm Value
0921 0x010F _BEQ_rel:
0922 0x010F  41010F80 BRV0 _Rel,0,1,, Rel, IF, OP1 -- Read rel Value
0923  --------------------------------------------------------------------------------
0924  -- Row 1 : 0x01-0xF1
0925  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
0926  --------------------------------------------------------------------------------
0927 0x0110 _ORA_dpXi:
0928 0x0110  41C90780 BRV0 _RO_DPXI,0,1,, Pls, IF, OP1 -- Read DP Ptr
0929 0x0111 _ORA_dpiY:
0930 0x0111  41E10780 BRV0 _RO_DPIY,0,1,, Pls, IF, OP1 -- Read DP Ptr
0931 0x0112 _AND_dpXi:
0932 0x0112  41C90780 BRV0 _RO_DPXI,0,1,, Pls, IF, OP1 -- Read DP Ptr
0933 0x0113 _AND_dpiY:
0934 0x0113  41E10780 BRV0 _RO_DPIY,0,1,, Pls, IF, OP1 -- Read DP Ptr
0935 0x0114 _EOR_dpXi:
0936 0x0114  41C90780 BRV0 _RO_DPXI,0,1,, Pls, IF, OP1 -- Read DP Ptr
0937 0x0115 _EOR_dpiY:
0938 0x0115  41E10780 BRV0 _RO_DPIY,0,1,, Pls, IF, OP1 -- Read DP Ptr
0939 0x0116 _ADC_dpXi:
0940 0x0116  41C90780 BRV0 _RO_DPXI,0,1,, Pls, IF, OP1 -- Read DP Ptr
0941 0x0117 _ADC_dpiY:
0942 0x0117  41E10780 BRV0 _RO_DPIY,0,1,, Pls, IF, OP1 -- Read DP Ptr
0943 0x0118 _STA_dpXi:
0944 0x0118  42590780 BRV0 _WO_DPXI,0,1,, Pls, IF, OP1 -- Read DP Ptr
0945 0x0119 _STA_dpiY:
0946 0x0119  42710780 BRV0 _WO_DPIY,0,1,, Pls, IF, OP1 -- Read DP Ptr
0947 0x011A _LDA_dpXi:
0948 0x011A  41C90780 BRV0 _RO_DPXI,0,1,, Pls, IF, OP1 -- Read DP Ptr
0949 0x011B _LDA_dpiY:
0950 0x011B  41E10780 BRV0 _RO_DPIY,0,1,, Pls, IF, OP1 -- Read DP Ptr
0951 0x011C _CMP_dpXi:
0952 0x011C  41C90780 BRV0 _RO_DPXI,0,1,, Pls, IF, OP1 -- Read DP Ptr
0953 0x011D _CMP_dpiY:
0954 0x011D  41E10780 BRV0 _RO_DPIY,0,1,, Pls, IF, OP1 -- Read DP Ptr
0955 0x011E _SBC_dpXi:
0956 0x011E  41C90780 BRV0 _RO_DPXI,0,1,, Pls, IF, OP1 -- Read DP Ptr
0957 0x011F _SBC_dpiY:
0958 0x011F  41E10780 BRV0 _RO_DPIY,0,1,, Pls, IF, OP1 -- Read DP Ptr
0959  --------------------------------------------------------------------------------
0960  -- Row 2 : 0x02-0xF2
0961  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
0962  --------------------------------------------------------------------------------
0963 0x0120 _NOP_02:
0964 0x0120  790107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
0965 0x0121 _ORA_dpi:
0966 0x0121  41B10780 BRV0 _RO_DPI,0,1,, Pls, IF, OP1 -- Read DP
0967 0x0122 _NOP_22:
0968 0x0122  791107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
0969 0x0123 _AND_dpi:
0970 0x0123  41B10780 BRV0 _RO_DPI,0,1,, Pls, IF, OP1 -- Read DP
0971 0x0124 _NOP_42:
0972 0x0124  792107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
0973 0x0125 _EOR_dpi:
0974 0x0125  41B10780 BRV0 _RO_DPI,0,1,, Pls, IF, OP1 -- Read DP
0975 0x0126 _NOP_62:
0976 0x0126  793107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
0977 0x0127 _ADC_dpi:
0978 0x0127  41B10780 BRV0 _RO_DPI,0,1,, Pls, IF, OP1 -- Read DP
0979 0x0128 _NOP_82:
0980 0x0128  794107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
0981 0x0129 _STA_dpi:
0982 0x0129  42410780 BRV0 _WO_DPI,0,1,, Pls, IF, OP1 -- Read DP
0983 0x012A _LDX_imm:
0984 0x012A  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read #imm Value
0985 0x012B _LDA_dpi:
0986 0x012B  41B10780 BRV0 _RO_DPI,0,1,, Pls, IF, OP1 -- Read DP
0987 0x012C _NOP_C2:
0988 0x012C  796107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
0989 0x012D _CMP_dpi:
0990 0x012D  41B10780 BRV0 _RO_DPI,0,1,, Pls, IF, OP1 -- Read DP
0991 0x012E _NOP_E2:
0992 0x012E  797107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
0993 0x012F _SBC_dpi:
0994 0x012F  41B10780 BRV0 _RO_DPI,0,1,, Pls, IF, OP1 -- Read DP
0995  --------------------------------------------------------------------------------
0996  -- Row 3 : 0x03-0xF3
0997  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
0998  --------------------------------------------------------------------------------
0999 0x0130 _NOP_03:
1000 0x0130  798107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1001 0x0131 _NOP_13:
1002 0x0131  798907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1003 0x0132 _NOP_23:
1004 0x0132  799107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1005 0x0133 _NOP_33:
1006 0x0133  799907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1007 0x0134 _NOP_43:
1008 0x0134  79A107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1009 0x0135 _NOP_53:
1010 0x0135  79A907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1011 0x0136 _NOP_63:
1012 0x0136  79B107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1013 0x0137 _NOP_73:
1014 0x0137  79B907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1015 0x0138 _NOP_83:
1016 0x0138  79C107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1017 0x0139 _NOP_93:
1018 0x0139  79C907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1019 0x013A _NOP_A3:
1020 0x013A  79D107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1021 0x013B _NOP_B3:
1022 0x013B  79D907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1023 0x013C _NOP_C3:
1024 0x013C  79E107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1025 0x013D _NOP_D3:
1026 0x013D  79E907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1027 0x013E _NOP_E3:
1028 0x013E  79F107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1029 0x013F _NOP_F3:
1030 0x013F  79F907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1031  --------------------------------------------------------------------------------
1032  -- Row 4 : 0x04-0xF4
1033  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1034  --------------------------------------------------------------------------------
1035 0x0140 _TSB_dp:
1036 0x0140  43110780 BRV0 _RMW_DP,0,1,, Pls, IF, OP1 -- Read DP
1037 0x0141 _TRB_dp:
1038 0x0141  43110780 BRV0 _RMW_DP,0,1,, Pls, IF, OP1 -- Read DP
1039 0x0142 _BIT_dp:
1040 0x0142  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1041 0x0143 _BIT_dpX:
1042 0x0143  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1043 0x0144 _NOP_44:
1044 0x0144  7A2107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1045 0x0145 _NOP_54:
1046 0x0145  7A2907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1047 0x0146 _STZ_dp:
1048 0x0146  42290780 BRV0 _WO_DP,0,1,, Pls, IF, OP1 -- Read DP
1049 0x0147 _STZ_dpX:
1050 0x0147  42310780 BRV0 _WO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1051 0x0148 _STY_dp:
1052 0x0148  42290780 BRV0 _WO_DP,0,1,, Pls, IF, OP1 -- Read DP
1053 0x0149 _STY_dpX:
1054 0x0149  42310780 BRV0 _WO_DPX,0,1,, Pls, IR, OP1 -- Read DP
1055 0x014A _LDY_dp:
1056 0x014A  41990780 BRV0 _RO_DP,0,1,, Pls, IR, OP1 -- Read DP
1057 0x014B _LDY_dpX:
1058 0x014B  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1059 0x014C _CPY_dp:
1060 0x014C  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1061 0x014D _NOP_D4:
1062 0x014D  7A6907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1063 0x014E _CPX_dp:
1064 0x014E  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1065 0x014F _NOP_F4:
1066 0x014F  7A7907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1067  --------------------------------------------------------------------------------
1068  -- Row 5 : 0x05-0xF5
1069  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1070  --------------------------------------------------------------------------------
1071 0x0150 _ORA_dp:
1072 0x0150  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1073 0x0151 _ORA_dpX:
1074 0x0151  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1075 0x0152 _AND_dp:
1076 0x0152  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1077 0x0153 _AND_dpX:
1078 0x0153  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1079 0x0154 _EOR_dp:
1080 0x0154  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1081 0x0155 _EOR_dpX:
1082 0x0155  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1083 0x0156 _ADC_dp:
1084 0x0156  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1085 0x0157 _ADC_dpX:
1086 0x0157  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1087 0x0158 _STA_dp:
1088 0x0158  42290780 BRV0 _WO_DP,0,1,, Pls, IF, OP1 -- Read DP
1089 0x0159 _STA_dpX:
1090 0x0159  42310780 BRV0 _WO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1091 0x015A _LDA_dp:
1092 0x015A  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1093 0x015B _LDA_dpX:
1094 0x015B  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1095 0x015C _CMP_dp:
1096 0x015C  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1097 0x015D _CMP_dpX:
1098 0x015D  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1099 0x015E _SBC_dp:
1100 0x015E  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1101 0x015F _SBC_dpX:
1102 0x015F  41A10780 BRV0 _RO_DPX,0,1,, Pls, IF, OP1 -- Read DP
1103  --------------------------------------------------------------------------------
1104  -- Row 6 : 0x06-0xF6
1105  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1106  --------------------------------------------------------------------------------
1107 0x0160 _ASL_dp:
1108 0x0160  43110780 BRV0 _RMW_DP,0,1,, Pls, IF, OP1 -- Read DP
1109 0x0161 _ASL_dpX:
1110 0x0161  43210780 BRV0 _RMW_DPX,0,1,, Pls, IF, OP1 -- Read DP
1111 0x0162 _ROL_dp:
1112 0x0162  43110780 BRV0 _RMW_DP,0,1,, Pls, IF, OP1 -- Read DP
1113 0x0163 _ROL_dpX:
1114 0x0163  43210780 BRV0 _RMW_DPX,0,1,, Pls, IF, OP1 -- Read DP
1115 0x0164 _LSR_dp:
1116 0x0164  43110780 BRV0 _RMW_DP,0,1,, Pls, IF, OP1 -- Read DP
1117 0x0165 _LSR_dpX:
1118 0x0165  43210780 BRV0 _RMW_DPX,0,1,, Pls, IF, OP1 -- Read DP
1119 0x0166 _ROR_dp:
1120 0x0166  43110780 BRV0 _RMW_DP,0,1,, Pls, IF, OP1 -- Read DP
1121 0x0167 _ROR_dpX:
1122 0x0167  43210780 BRV0 _RMW_DPX,0,1,, Pls, IF, OP1 -- Read DP
1123 0x0168 _STX_dp:
1124 0x0168  42290780 BRV0 _WO_DP,0,1,, Pls, IF, OP1 -- Read DP
1125 0x0169 _STX_dpY:
1126 0x0169  42390780 BRV0 _WO_DPY,0,1,, Pls, IF, OP1 -- Read DP
1127 0x016A _LDX_dp:
1128 0x016A  41990780 BRV0 _RO_DP,0,1,, Pls, IF, OP1 -- Read DP
1129 0x016B _LDX_dpY:
1130 0x016B  41A90780 BRV0 _RO_DPY,0,1,, Pls, IF, OP1 -- Read DP
1131 0x016C _DEC_dp:
1132 0x016C  43110780 BRV0 _RMW_DP,0,1,, Pls, IF, OP1 -- Read DP
1133 0x016D _DEC_dpX:
1134 0x016D  43210780 BRV0 _RMW_DPX,0,1,, Pls, IF, OP1 -- Read DP
1135 0x016E _INC_dp:
1136 0x016E  43110780 BRV0 _RMW_DP,0,1,, Pls, IF, OP1 -- Read DP
1137 0x016F _INC_dpX:
1138 0x016F  43210780 BRV0 _RMW_DPX,0,1,, Pls, IF, OP1 -- Read DP
1139  --------------------------------------------------------------------------------
1140  -- Row 7 : 0x07-0xF7
1141  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1142  --------------------------------------------------------------------------------
1143 0x0170 _NOP_07:
1144 0x0170  7B8107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1145 0x0171 _NOP_17:
1146 0x0171  7B8907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1147 0x0172 _NOP_27:
1148 0x0172  7B9107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1149 0x0173 _NOP_37:
1150 0x0173  7B9907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1151 0x0174 _NOP_47:
1152 0x0174  7BA107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1153 0x0175 _NOP_57:
1154 0x0175  7BA907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1155 0x0176 _NOP_67:
1156 0x0176  7BB107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1157 0x0177 _NOP_77:
1158 0x0177  7BB907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1159 0x0178 _NOP_87:
1160 0x0178  7BC107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1161 0x0179 _NOP_97:
1162 0x0179  7BC907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1163 0x017A _NOP_A7:
1164 0x017A  7BD107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1165 0x017B _NOP_B7:
1166 0x017B  7BD907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1167 0x017C _NOP_C7:
1168 0x017C  7BE107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1169 0x017D _NOP_D7:
1170 0x017D  7BE907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1171 0x017E _NOP_E7:
1172 0x017E  7BF107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1173 0x017F _NOP_F7:
1174 0x017F  7BF907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1175  --------------------------------------------------------------------------------
1176  -- Row 8 : 0x08-0xF8
1177  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1178  --------------------------------------------------------------------------------
1179 0x0180 _PHP:
1180 0x0180  41014120 BRV0 _Psh,0,1, Stk,, WR,, Psh -- Push P
1181 0x0181 _CLC:
1182 0x0181  7C0907CC BRV3 $,0,1,, Pls, IF, IR,, WE_P -- Clear Carry Flag
1183 0x0182 _PLP:
1184 0x0182  410142B0 BRV0 _Pop,0,1, Stk,, RD, OP1, Pop -- Pop P
1185 0x0183 _SEC:
1186 0x0183  7C1907CC BRV3 $,0,1,, Pls, IF, IR,, WE_P -- Set Carry Flag
1187 0x0184 _PHA:
1188 0x0184  41014120 BRV0 _Psh,0,1, Stk,, WR,, Psh -- Push A
1189 0x0185 _CLI:
1190 0x0185  5C2907CC BRV1 $,0,1,, Pls, IF, IR,, WE_P -- Clear Interrupt Mask Flg
1191 0x0186 _PLA:
1192 0x0186  410142B0 BRV0 _Pop,0,1, Stk,, RD, OP1, Pop -- Pop A
1193 0x0187 _SEI:
1194 0x0187  5C3907CC BRV1 $,0,1,, Pls, IF, IR,, WE_P -- Set Interrupt Mask Flag
1195 0x0188 _DEY:
1196 0x0188  7C4107C6 BRV3 $,0,1,, Pls, IF, IR,, WE_Y -- Decrement Y
1197 0x0189 _TYA:
1198 0x0189  7C4907C2 BRV3 $,0,1,, Pls, IF, IR,, WE_A -- Transfer Y to A
1199 0x018A _TAY:
1200 0x018A  7C5107C6 BRV3 $,0,1,, Pls, IF, IR,, WE_Y -- Transfer A to Y
1201 0x018B _CLV:
1202 0x018B  7C5907CC BRV3 $,0,1,, Pls, IF, IR,, WE_P -- Clear oVerflow Flag
1203 0x018C _INY:
1204 0x018C  7C6107C6 BRV3 $,0,1,, Pls, IF, IR,, WE_Y -- Increment Y
1205 0x018D _CLD:
1206 0x018D  7C6907CC BRV3 $,0,1,, Pls, IF, IR,, WE_P -- Clear Decimal Mode Flag
1207 0x018E _INX:
1208 0x018E  7C7107C4 BRV3 $,0,1,, Pls, IF, IR,, WE_X -- Increment X
1209 0x018F _SED:
1210 0x018F  7C7907CC BRV3 $,0,1,, Pls, IF, IR,, WE_P -- Set Decimal Mode Flag
1211  --------------------------------------------------------------------------------
1212  -- Row 9 : 0x09-0xF9
1213  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1214  --------------------------------------------------------------------------------
1215 0x0190 _ORA_imm:
1216 0x0190  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read Immediate Operand
1217 0x0191 _ORA_absY:
1218 0x0191  42190780 BRV0 _RO_AbsY,0,1,, Pls, IF, OP1 -- Read Mem Ptr Lo
1219 0x0192 _AND_imm:
1220 0x0192  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read Immediate Operand
1221 0x0193 _AND_absY:
1222 0x0193  42190780 BRV0 _RO_AbsY,0,1,, Pls, IF, OP1 -- Read Mem Ptr Lo
1223 0x0194 _EOR_imm:
1224 0x0194  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read Immediate Operand
1225 0x0195 _EOR_absY:
1226 0x0195  42190780 BRV0 _RO_AbsY,0,1,, Pls, IF, OP1 -- Read Mem Ptr Lo
1227 0x0196 _ADC_imm:
1228 0x0196  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read Immediate Operand
1229 0x0197 _ADC_absY:
1230 0x0197  42190780 BRV0 _RO_AbsY,0,1,, Pls, IF, OP1 -- Read Mem Ptr Lo
1231 0x0198 _BIT_imm:
1232 0x0198  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read Immediate Operand
1233 0x0199 _STA_absY:
1234 0x0199  42A90780 BRV0 _WO_AbsY,0,1,, Pls, IF, OP1 -- Read Mem Ptr Lo
1235 0x019A _LDA_imm:
1236 0x019A  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read Immediate Operand
1237 0x019B _LDA_absY:
1238 0x019B  42190780 BRV0 _RO_AbsY,0,1,, Pls, IF, OP1 -- Read Mem Ptr Lo
1239 0x019C _CMP_imm:
1240 0x019C  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read Immediate Operand
1241 0x019D _CMP_absY:
1242 0x019D  42190780 BRV0 _RO_AbsY,0,1,, Pls, IF, OP1 -- Read Mem Ptr Lo
1243 0x019E _SBC_imm:
1244 0x019E  31010780 BMW _Imm,0,1,, Pls, IF, OP1 -- Read Immediate Operand
1245 0x019F _SBC_absY:
1246 0x019F  42190780 BRV0 _RO_AbsY,0,1,, Pls, IF, OP1 -- Read Mem Ptr Lo
1247  --------------------------------------------------------------------------------
1248  -- Row A : 0x0A-0xFA
1249  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1250  --------------------------------------------------------------------------------
1251 0x01A0 _ASL_A:
1252 0x01A0  7D0107C2 BRV3 $,0,1,, Pls, IF, IR,, WE_A -- Arithmetic Shift A Left
1253 0x01A1 _INC_A:
1254 0x01A1  7D0907C2 BRV3 $,0,1,, Pls, IF, IR,, WE_A -- Increment A
1255 0x01A2 _ROL_A:
1256 0x01A2  7D1107C2 BRV3 $,0,1,, Pls, IF, IR,, WE_A -- Rotate A Left
1257 0x01A3 _DEC_A:
1258 0x01A3  7D1907C2 BRV3 $,0,1,, Pls, IF, IR,, WE_A -- Decrement A
1259 0x01A4 _LSR_A:
1260 0x01A4  7D2107C2 BRV3 $,0,1,, Pls, IF, IR,, WE_A -- Logical Shift A Right
1261 0x01A5 _PHY:
1262 0x01A5  41014120 BRV0 _Psh,0,1, Stk,, WR,, Psh -- Push Y
1263 0x01A6 _ROR_A:
1264 0x01A6  7D3107C2 BRV3 $,0,1,, Pls, IF, IR,, WE_A -- Rotate A Right
1265 0x01A7 _PLY:
1266 0x01A7  410142B0 BRV0 _Pop,0,1, Stk,, RD, OP1, Pop -- Pop Y
1267 0x01A8 _TXA:
1268 0x01A8  7D4107C2 BRV3 $,0,1,, Pls, IF, IR,, WE_A -- Transfer X to A
1269 0x01A9 _TXS:
1270 0x01A9  7D4907CA BRV3 $,0,1,, Pls, IF, IR,, WE_S -- Transfer X to S
1271 0x01AA _TAX:
1272 0x01AA  7D5107C4 BRV3 $,0,1,, Pls, IF, IR,, WE_X -- Transfer A to X
1273 0x01AB _TSX:
1274 0x01AB  7D5907C4 BRV3 $,0,1,, Pls, IF, IR,, WE_X -- Transfer S to X
1275 0x01AC _DEX:
1276 0x01AC  7D6107C4 BRV3 $,0,1,, Pls, IF, IR,, WE_X -- Decrement X
1277 0x01AD _PHX:
1278 0x01AD  41014120 BRV0 _Psh,0,1, Stk,, WR,, Psh -- Push X
1279 0x01AE _NOP: -- the real NOP
1280 0x01AE  7D7107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip True NOP Instruction
1281 0x01AF _PLX:
1282 0x01AF  410142B0 BRV0 _Pop,0,1, Stk,, RD, OP1, Pop -- Pop X
1283  --------------------------------------------------------------------------------
1284  -- Row B : 0x0B-0xFB
1285  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1286  --------------------------------------------------------------------------------
1287 0x01B0 _NOP_0B:
1288 0x01B0  7D8107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1289 0x01B1 _NOP_1B:
1290 0x01B1  7D8907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1291 0x01B2 _NOP_2B:
1292 0x01B2  7D9107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1293 0x01B3 _NOP_3B:
1294 0x01B3  7D9907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1295 0x01B4 _NOP_4B:
1296 0x01B4  7DA107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1297 0x01B5 _NOP_5B:
1298 0x01B5  7DA907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1299 0x01B6 _NOP_6B:
1300 0x01B6  7DB107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1301 0x01B7 _NOP_7B:
1302 0x01B7  7DB907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1303 0x01B8 _NOP_8B:
1304 0x01B8  7DC107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1305 0x01B9 _NOP_9B:
1306 0x01B9  7DC907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1307 0x01BA _NOP_AB:
1308 0x01BA  7DD107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1309 0x01BB _NOP_BB:
1310 0x01BB  7DD907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1311 0x01BC _NOP_CB:
1312 0x01BC  7DE107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1313 0x01BD _NOP_DB:
1314 0x01BD  7DE907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1315 0x01BE _NOP_EB:
1316 0x01BE  7DF107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1317 0x01BF _NOP_FB:
1318 0x01BF  7DF907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1319  --------------------------------------------------------------------------------
1320  -- Row C : 0x0C-0xFC
1321  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1322  --------------------------------------------------------------------------------
1323 0x01C0 _TSB_abs:
1324 0x01C0  43410780 BRV0 _RMW_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1325 0x01C1 _TRB_abs:
1326 0x01C1  43410780 BRV0 _RMW_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1327 0x01C2 _BIT_abs:
1328 0x01C2  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1329 0x01C3 _BIT_absX:
1330 0x01C3  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1331 0x01C4 _JMP_abs:
1332 0x01C4  41610780 BRV0 _Jmp,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1333 0x01C5 _NOP_5C:
1334 0x01C5  7E2907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1335 0x01C6 _JMP_absi:
1336 0x01C6  41690780 BRV0 _JmpI,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1337 0x01C7 _JMP_absXi:
1338 0x01C7  41810780 BRV0 _JmpXI,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1339 0x01C8 _STY_abs:
1340 0x01C8  42890780 BRV0 _WO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1341 0x01C9 _STZ_abs:
1342 0x01C9  42890780 BRV0 _WO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1343 0x01CA _LDY_abs:
1344 0x01CA  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1345 0x01CB _LDY_absX:
1346 0x01CB  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1347 0x01CC _CPY_abs:
1348 0x01CC  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1349 0x01CD _NOP_DC:
1350 0x01CD  7E6907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1351 0x01CE _CPX_abs:
1352 0x01CE  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1353 0x01CF _NOP_FC:
1354 0x01CF  7E7907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1355  --------------------------------------------------------------------------------
1356  -- Row D : 0x0D-0xFD
1357  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1358  --------------------------------------------------------------------------------
1359 0x01D0 _ORA_abs:
1360 0x01D0  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1361 0x01D1 _ORA_absX:
1362 0x01D1  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1363 0x01D2 _AND_abs:
1364 0x01D2  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1365 0x01D3 _AND_absX:
1366 0x01D3  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1367 0x01D4 _EOR_abs:
1368 0x01D4  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1369 0x01D5 _EOR_absX:
1370 0x01D5  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1371 0x01D6 _ADC_abs:
1372 0x01D6  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1373 0x01D7 _ADC_absX:
1374 0x01D7  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1375 0x01D8 _STA_abs:
1376 0x01D8  42890780 BRV0 _WO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1377 0x01D9 _STA_absX:
1378 0x01D9  42990780 BRV0 _WO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1379 0x01DA _LDA_abs:
1380 0x01DA  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1381 0x01DB _LDA_absX:
1382 0x01DB  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1383 0x01DC _CMP_abs:
1384 0x01DC  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1385 0x01DD _CMP_absX:
1386 0x01DD  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1387 0x01DE _SBC_abs:
1388 0x01DE  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1389 0x01DF _SBC_absX:
1390 0x01DF  42090780 BRV0 _RO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1391  --------------------------------------------------------------------------------
1392  -- Row E : 0x0E-0xFE
1393  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1394  --------------------------------------------------------------------------------
1395 0x01E0 _ASL_abs:
1396 0x01E0  43410780 BRV0 _RMW_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1397 0x01E1 _ASL_absX:
1398 0x01E1  43590780 BRV0 _RMW_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1399 0x01E2 _ROL_abs:
1400 0x01E2  43410780 BRV0 _RMW_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1401 0x01E3 _ROL_absX:
1402 0x01E3  43590780 BRV0 _RMW_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1403 0x01E4 _LSR_abs:
1404 0x01E4  43410780 BRV0 _RMW_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1405 0x01E5 _LSR_absX:
1406 0x01E5  43590780 BRV0 _RMW_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1407 0x01E6 _ROR_abs:
1408 0x01E6  43410780 BRV0 _RMW_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1409 0x01E7 _ROR_absX:
1410 0x01E7  43590780 BRV0 _RMW_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1411 0x01E8 _STX_abs:
1412 0x01E8  42890780 BRV0 _WO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1413 0x01E9 _STZ_absX:
1414 0x01E9  42990780 BRV0 _WO_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1415 0x01EA _LDX_abs:
1416 0x01EA  41F90780 BRV0 _RO_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1417 0x01EB _LDX_absY:
1418 0x01EB  42190780 BRV0 _RO_AbsY,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1419 0x01EC _DEC_abs:
1420 0x01EC  43410780 BRV0 _RMW_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1421 0x01ED _DEC_absX:
1422 0x01ED  43590780 BRV0 _RMW_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1423 0x01EE _INC_abs:
1424 0x01EE  43410780 BRV0 _RMW_Abs,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1425 0x01EF _INC_absX:
1426 0x01EF  43590780 BRV0 _RMW_AbsX,0,1,, Pls, IF, OP1 -- Read Dst Ptr Lo
1427  --------------------------------------------------------------------------------
1428  -- Row F : 0x0F-0xFF
1429  -- I BA, Wt, En, NA, PC, IO, DI, SP, Reg_WE, ISR
1430  --------------------------------------------------------------------------------
1431 0x01F0 _NOP_0F:
1432 0x01F0  7F8107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1433 0x01F1 _NOP_1F:
1434 0x01F1  7F8907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1435 0x01F2 _NOP_2F:
1436 0x01F2  7F9107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1437 0x01F3 _NOP_3F:
1438 0x01F3  7F9907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1439 0x01F4 _NOP_4F:
1440 0x01F4  7FA107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1441 0x01F5 _NOP_5F:
1442 0x01F5  7FA907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1443 0x01F6 _NOP_6F:
1444 0x01F6  7FB107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1445 0x01F7 _NOP_7F:
1446 0x01F7  7FB907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1447 0x01F8 _NOP_8F:
1448 0x01F8  7FC107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1449 0x01F9 _NOP_9F:
1450 0x01F9  7FC907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1451 0x01FA _NOP_AF:
1452 0x01FA  7FD107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1453 0x01FB _NOP_BF:
1454 0x01FB  7FD907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1455 0x01FC _NOP_CF:
1456 0x01FC  7FE107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1457 0x01FD _NOP_DF:
1458 0x01FD  7FE907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1459 0x01FE _NOP_EF:
1460 0x01FE  7FF107C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1461 0x01FF _NOP_FF:
1462 0x01FF  7FF907C0 BRV3 $,0,1,, Pls, IF, IR -- Skip Invalid Instruction
1463  --------------------------------------------------------------------------------
1464  -- End of Instruction Decode Table
1465  --------------------------------------------------------------------------------
1467 0x0200 _Last: .org 512
1469 0x0200 _end:
